<?xml version="1.0" encoding="UTF-8"?>
<configuration>
    <!-- %m输出的信息,%p日志级别,%t线程名,%d日期,%c类的全名,%i索引【从数字0开始递增】,,, -->
    <!-- appender是configuration的子节点，是负责写日志的组件。 -->
    <!-- ConsoleAppender：把日志输出到控制台 -->
    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>%d %p [%X{X-B3-TraceId:-}] %file:%line - %m%n</pattern>
            <!-- 控制台也要使用UTF-8，不要使用GBK，否则会中文乱码 -->
            <charset>UTF-8</charset>
        </encoder>
    </appender>


    <!-- 使用json格式保存日志文件 -->
    <appender name="JSON_LOG"  class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>./logs/zone-common.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- 活动文件的名字会根据fileNamePattern的值，每隔一段时间改变一次 -->
            <!-- 文件名：log/zone.2017-12-05.0.log -->
            <fileNamePattern>./logs/zone-common.%d.%i.log</fileNamePattern>
            <!-- 每产生一个日志文件，该日志文件的保存期限为30天 -->
            <maxHistory>30</maxHistory>
            <timeBasedFileNamingAndTriggeringPolicy  class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <!-- maxFileSize:这是活动文件的大小，默认值是10MB，测试时可改成1KB看效果 -->
                <maxFileSize>10MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder class="net.logstash.logback.encoder.LoggingEventCompositeJsonEncoder">
            <providers>
                <timestamp>
                    <timeZone>GMT+08</timeZone>
                </timestamp>
                <pattern>
                    <pattern>
                        <!--{-->
                        <!--"severity": "%level",-->
                        <!--"service": "${springAppName:-}",-->
                        <!--"trace": "%X{X-B3-TraceId:-}",-->
                        <!--"span": "%X{X-B3-SpanId:-}",-->
                        <!--"parent": "%X{X-B3-ParentSpanId:-}",-->
                        <!--"exportable": "%X{X-Span-Export:-}",-->
                        <!--"pid": "${PID:-}",-->
                        <!--"thread": "%thread",-->
                        <!--"class": "%logger{40}",-->
                        <!--"rest": "%message"-->
                        <!--}-->
                        {
                        "level":"%level",
                        "traceId":"%X{X-B3-TraceId:-}",
                        "file":"%file",
                        "line":"%line",
                        "message":"%m%n"
                        }
                    </pattern>
                </pattern>
            </providers>
        </encoder>
    </appender>

    <!-- 按照每天生成日志文件 -->
    <appender name="ERROR_FILE"  class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>./logs/zone-error.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!--日志文件输出的文件名-->
            <fileNamePattern>./logs/zone-error.%d.log</fileNamePattern>
            <!--日志文件保留天数-->
            <MaxHistory>30</MaxHistory>
        </rollingPolicy>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符-->
            <!--<pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n</pattern>-->
            <pattern>%d %p [%X{X-B3-TraceId:-}] %file:%line - %m%n</pattern>
        </encoder>
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>ERROR</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
    </appender>


    <!-- 指定项目中某个包，当有日志操作行为时的日志记录级别 -->
    <!-- com.liyan为根包，也就是只要是发生在这个根包下面的所有日志操作行为的权限都是DEBUG -->
    <!-- 级别依次为【从高到低】：FATAL > ERROR > WARN > INFO > DEBUG > TRACE  -->
    <logger name="org.springframework" level="WARN"/>

    <springProfile name="local">
        <root level="INFO">
            <appender-ref ref="STDOUT" />
            <appender-ref ref="JSON_LOG" />
            <appender-ref ref="ERROR_FILE" />
        </root>
    </springProfile>

    <springProfile name="dev">
        <root level="INFO">
            <appender-ref ref="STDOUT" />
            <appender-ref ref="JSON_LOG" />
            <appender-ref ref="ERROR_FILE" />
        </root>
    </springProfile>

    <springProfile name="daily">
        <root level="INFO">
            <appender-ref ref="JSON_LOG" />
            <appender-ref ref="ERROR_FILE" />
        </root>
        <logger name="io" level="WARN"/>
        <logger name="org" level="WARN"/>
        <logger name="javax" level="WARN"/>
        <logger name="com.netflix" level="WARN"/>
        <logger name="springfox" level="WARN"/>
    </springProfile>

    <springProfile name="prod">
        <root level="INFO">
            <appender-ref ref="JSON_LOG" />
            <appender-ref ref="ERROR_FILE" />
        </root>
        <logger name="io" level="WARN"/>
        <logger name="org" level="WARN"/>
        <logger name="javax" level="WARN"/>
        <logger name="com.netflix" level="WARN"/>
        <logger name="springfox" level="WARN"/>
    </springProfile>

</configuration>